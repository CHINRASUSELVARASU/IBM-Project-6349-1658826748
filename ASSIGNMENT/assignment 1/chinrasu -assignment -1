// C++ code
//
#define trigPin 4
#define echoPin 3
int Buzzer = 5; 
int ledPin= 10;  
int duration, distance; //to measure the distance and time taken
const int LEDPin = 13;

const int buzzerPin = 2;

const int ldrPin = A3;


void setup()
{
        Serial.begin (9600); 
        //Define the output and input objects(devices)
        pinMode(trigPin, OUTPUT); 
        pinMode(echoPin, INPUT);
        pinMode(Buzzer, OUTPUT);
        pinMode(ledPin, OUTPUT);
        pinMode(LEDPin, OUTPUT);
        pinMode(buzzerPin, OUTPUT);
        pinMode(ldrPin, INPUT);

}



void loop() 
{

    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
    distance = (duration/2) / 29.1;
    //when distance is greater than or equal to 200 OR less than or equal to 0,the buzzer and LED are off
  if (distance >= 200 || distance <= 0) 
        {
        Serial.println("no object detected");
        digitalWrite(Buzzer,LOW);
        digitalWrite(ledPin,LOW);
        }
  else
  {
        Serial.println("object detected \n");
        Serial.print("distance= ");              
        Serial.print(distance);        //prints the distance if it is between the range 0 to 200
        tone(Buzzer,400);              // play tone of 400Hz for 500 ms
        digitalWrite(ledPin,HIGH);
  }
  


int ldrStatus = analogRead(ldrPin);

if (ldrStatus >= 400)
{

tone(buzzerPin, 100);

digitalWrite(LEDPin, HIGH);

delay(100);

noTone(buzzerPin);

digitalWrite(LEDPin, LOW);

delay(100);

Serial.println("----------- ALARM ACTIVATED -----------");

}

else
{

noTone(buzzerPin);

digitalWrite(LEDPin, LOW);

Serial.println("ALARM DEACTIVATED");

}

}
